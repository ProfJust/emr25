import numpy as np

# Homogene 4x4-Matrizen (für 3D) oder 3x3-Matrizen (für 2D) 
# codieren Rotation, Translation und Skalierung. Beispiel für eine 2D-Transformationsmatrix
def create_homogeneous_2d(angle, tx, ty):
    theta = np.radians(angle)
    cosT, sinT = np.cos(theta), np.sin(theta)
    return np.array([
        [cosT, -sinT, tx],
        [sinT,  cosT, ty],
        [0,  0, 1]
    ])

def transform_point(matrix, point):
    homogen = np.append(point, 1)  # Ergänze homogene Koordinate
    transformed = matrix @ homogen
    return transformed[:2]  # Rückkonvertierung zu kartesischen Koordinaten
import matplotlib.pyplot as plt

# Beispielpunkte und Transformation
points = np.array([[0,0], [1,0], [1,1], [0,1]])
# erstelle homogene Transformationsmatrix, Verschiebung um 2
transformM = create_homogeneous_2d(0, 2, 0) 
print(transformM)
transformed = np.array([transform_point(transformM, p) for p in points])
input()
# Plot
fig, axes = plt.subplots()
axes.plot(*points.T, 'bo-', label="Original")
axes.plot(*transformed.T, 'ro-', label="Transformiert")
axes.axis('equal'); axes.legend()
plt.show()
